
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os



x = 30


Sen1_L_area_coords = [
    (0, 16), (0, 17), 
    (1, 16), (1, 17), (1, 18),
    (2, 16), (2, 17), (2, 18), (2, 19),
    (3, 16), (3, 17), (3, 18), (3, 19),
    (4, 16), (4, 17), (4, 18), (4, 19),(4, 20),
    (5, 16), (5, 17), (5, 18), (5, 19),(5, 20),
    (6, 16), (6, 17), (6, 18), (6, 19),(6, 20),
    (7, 16), (7, 17), (7, 18), (7, 19),(7, 20),
    (8, 16), (8, 17), (8, 18), (8, 19),(8, 20),
    (9, 16), (9, 17), (9, 18), (9, 19),(9, 20),
    (10, 16), (10, 17), (10, 18), (10, 19),(10, 20)
]

Sen2_L_area_coords = [
    (0, 11), (0, 12), (0, 13), (0, 14),
    (1, 11), (1, 12), (1, 13), (1, 14),
    (2, 11), (2, 12), (2, 13), (2, 14),
    (3, 11), (3, 12), (3, 13), (3, 14),
    (4, 11), (4, 12), (4, 13), (4, 14),
    (5, 11), (5, 12), (5, 13), (5, 14),
    (6, 11), (6, 12), (6, 13), (6, 14),
    (7, 11), (7, 12), (7, 13), (7, 14),
    (8, 11), (8, 12), (8, 13), (8, 14),
    (9, 11), (9, 12), (9, 13), (9, 14),
    (10, 11), (10, 12), (10, 13), (10, 14)
]

Sen3_L_area_coords = [
                                            (1, 8), (1, 9),
                                    (2, 7), (2, 8), (2, 9),
                            (3, 6), (3, 7), (3, 8), (3, 9),
                            (4, 6), (4, 7), (4, 8), (4, 9),
                    (5, 5), (5, 6), (5, 7), (5, 8), (5, 9),
                    (6, 5), (6, 6), (6, 7), (6, 8), (6, 9),
            (7, 4), (7, 5), (7, 6), (7, 7), (7, 8), (7, 9),
            (8, 4), (8, 5), (8, 6), (8, 7), (8, 8), (8, 9),
    (9, 3), (9, 4), (9, 5), (9, 6), (9, 7), (9, 8), (9, 9),
    (10, 3), (10, 4), (10, 5), (10, 6), (10, 7), (10, 8), (10, 9)
]

Sen4_L_area_coords = [
    (12, 16), (12, 17), (12, 18), (12, 19),(12, 20),
    (13, 16), (13, 17), (13, 18), (13, 19),(13, 20),
    (14, 16), (14, 17), (14, 18), (14, 19),(14, 20),
    (15, 16), (15, 17), (15, 18), (15, 19),(15, 20),
    (16, 16), (16, 17), (16, 18), (16, 19),(16, 20),
    (17, 16), (17, 17), (17, 18), (17, 19),(17, 20),
    (18, 16), (18, 17), (18, 18), (18, 19),
    (19, 16), (19, 17), (19, 18), (19, 19),
    (20, 16), (20, 17), (20, 18), (20, 19),
    (21, 16), (21, 17), (21, 18), (21, 19),
    (22, 16), (22, 17), 
    (23, 16), (23, 17)
]

Sen5_L_area_coords = [
    (12, 11), (12, 12), (12, 13), (12, 14),
    (13, 11), (13, 12), (13, 13), (13, 14),
    (14, 11), (14, 12), (14, 13), (14, 14),
    (15, 11), (15, 12), (15, 13), (15, 14),
    (16, 11), (16, 12), (16, 13), (16, 14),
    (17, 11), (17, 12), (17, 13), (17, 14),
    (18, 11), (18, 12), (18, 13), (18, 14),
    (19, 11), (19, 12), (19, 13), (19, 14),
    (20, 11), (20, 12), (20, 13), (20, 14),
    (21, 11), (21, 12), (21, 13), (21, 14),
    (22, 11), (22, 12), (22, 13), (22, 14),
    (23, 11), (23, 12), (23, 13), (23, 14)
]

Sen6_L_area_coords = [
    (12, 6), (12, 7), (12, 8), (12, 9),
    (13, 6), (13, 7), (13, 8), (13, 9),
    (14, 6), (14, 7), (14, 8), (14, 9),
    (15, 6), (15, 7), (15, 8), (15, 9),
    (16, 6), (16, 7), (16, 8), (16, 9),
    (17, 6), (17, 7), (17, 8), (17, 9),
    (18, 6), (18, 7), (18, 8), (18, 9),
    (19, 6), (19, 7), (19, 8), (19, 9),
    (20, 6), (20, 7), (20, 8), (20, 9),
    (21, 6), (21, 7), (21, 8), (21, 9),
    (22, 6), (22, 7), (22, 8), (22, 9),
    (23, 6), (23, 7), (23, 8), (23, 9)
]

Sen7_L_area_coords = [
                      (12, 2), (12, 3), (12, 4),
                      (13, 2), (13, 3), (13, 4),
             (14, 1), (14, 2), (14, 3), (14, 4),
             (15, 1), (15, 2), (15, 3), (15, 4),
             (16, 1), (16, 2), (16, 3), (16, 4),
    (17, 0), (17, 1), (17, 2), (17, 3), (17, 4),
    (18, 0), (18, 1), (18, 2), (18, 3), (18, 4),
    (19, 0), (19, 1), (19, 2), (19, 3), (19, 4),
    (20, 0), (20, 1), (20, 2), (20, 3), (20, 4),
    (21, 0), (21, 1), (21, 2), (21, 3), (21, 4),
    (22, 0), (22, 1), (22, 2), (22, 3), (22, 4),
    (23, 0), (23, 1), (23, 2), (23, 3), (23, 4)
]

Sen10_L_area_coords = [
    (25, 0), (25, 1), (25, 2), (25, 3), (25, 4),
    (26, 0), (26, 1), (26, 2), (26, 3), (26, 4),
    (27, 0), (27, 1), (27, 2), (27, 3), (27, 4),
    (28, 0), (28, 1), (28, 2), (28, 3), (28, 4),
    (29, 0), (29, 1), (29, 2), (29, 3), (29, 4),
             (30, 1), (30, 2), (30, 3), (30, 4),
             (31, 1), (31, 2), (31, 3), (31, 4),
             (32, 1), (32, 2), (32, 3), (32, 4),
             (33, 1), (33, 2), (33, 3), (33, 4),
             (34, 1), (34, 2), (34, 3), (34, 4),
             (35, 1), (35, 2), (35, 3), (35, 4),
             (36, 1), (36, 2), (36, 3), (36, 4),
             (37, 1), (37, 2), (37, 3), (37, 4)             
]

Sen9_L_area_coords = [
    (25, 6), (25, 7), (25, 8), (25, 9), 
    (26, 6), (26, 7), (26, 8), (26, 9), 
    (27, 6), (27, 7), (27, 8), (27, 9), 
    (28, 6), (28, 7), (28, 8), (28, 9), 
    (29, 6), (29, 7), (29, 8), (29, 9), 
    (30, 6), (30, 7), (30, 8), (30, 9), 
    (31, 6), (31, 7), (31, 8), (31, 9), 
    (32, 6), (32, 7), (32, 8), (32, 9), 
    (33, 6), (33, 7), (33, 8), (33, 9), 
    (34, 6), (34, 7), (34, 8), (34, 9), 
    (35, 6), (35, 7), (35, 8), (35, 9), 
    (36, 6), (36, 7), (36, 8), (36, 9),
    (37, 6), (37, 7), (37, 8), (37, 9) 
]

Sen8_L_area_coords = [
    (25, 11), (25, 12), (25, 13), (25, 14), (25, 15), (25, 16), (25, 17),
    (26, 11), (26, 12), (26, 13), (26, 14), (26, 15), (26, 16),
    (27, 11), (27, 12), (27, 13), (27, 14), (27, 15), (27, 16),
    (28, 11), (28, 12), (28, 13), (28, 14), (28, 15),
    (29, 11), (29, 12), (29, 13), (29, 14), (29, 15),
    (30, 11), (30, 12), (30, 13), (30, 14),
    (31, 11), (31, 12), (31, 13), (31, 14),
    (32, 11), (32, 12), (32, 13), (32, 14), 
    (33, 11), (33, 12), (33, 13), (33, 14), 
    (34, 11), (34, 12), (34, 13), 
    (35, 11), (35, 12), (35, 13), 
    (36, 11), (36, 12), (36, 13),
    (37, 11), (37, 12), (37, 13)
]

Sen12_L_area_coords = [
    (39, 1), (39, 2), (39, 3), (39, 4), (39, 5), (39, 6),
    (40, 1), (40, 2), (40, 3), (40, 4), (40, 5), (40, 6),
    (41, 1), (41, 2), (41, 3), (41, 4), (41, 5), (41, 6),
    (42, 1), (42, 2), (42, 3), (42, 4), (42, 5), (42, 6),
    (43, 1), (43, 2), (43, 3), (43, 4), (43, 5), (43, 6),
    (44, 1), (44, 2), (44, 3), (44, 4), (44, 5), (44, 6),
    (45, 1), (45, 2), (45, 3), (45, 4), (45, 5), (45, 6),
    (46, 1), (46, 2), (46, 3), (46, 4), (46, 5), (46, 6),
    (47, 1), (47, 2), (47, 3), (47, 4), (47, 5), (47, 6),
    (48, 1), (48, 2), (48, 3), (48, 4), (48, 5), (48, 6),
    (49, 1), (49, 2), (49, 3), (49, 4), (49, 5), (49, 6),
    (50, 1), (50, 2), (50, 3), (50, 4), (50, 5), (50, 6),
    (51, 1), (51, 2), (51, 3), (51, 4), (51, 5), (51, 6),
    (52, 1), (52, 2), (52, 3), (52, 4), (52, 5), (52, 6)
]

Sen11_L_area_coords = [
    (39, 8), (39, 9), (39, 10), (39, 11), (39, 12), (39, 13),
    (40, 8), (40, 9), (40, 10), (40, 11), (40, 12), (40, 13),
    (41, 8), (41, 9), (41, 10), (41, 11), (41, 12), (41, 13),
    (42, 8), (42, 9), (42, 10), (42, 11), (42, 12), (42, 13),
    (43, 8), (43, 9), (43, 10), (43, 11), (43, 12), (43, 13),
    (44, 8), (44, 9), (44, 10), (44, 11), (44, 12), (44, 13),
    (45, 8), (45, 9), (45, 10), (45, 11), (45, 12), (45, 13),
    (46, 8), (46, 9), (46, 10), (46, 11), (46, 12), (46, 13),
    (47, 8), (47, 9), (47, 10), (47, 11), (47, 12), (47, 13),
    (48, 8), (48, 9), (48, 10), (48, 11), (48, 12), (48, 13),
    (49, 8), (49, 9), (49, 10), (49, 11), (49, 12), (49, 13),
    (50, 8), (50, 9), (50, 10), (50, 11), (50, 12), (50, 13),
    (51, 8), (51, 9), (51, 10), (51, 11), (51, 12), (51, 13),
    (52, 8), (52, 9), (52, 10), (52, 11), (52, 12), (52, 13)
]

Sen13_L_area_coords = [
    (54, 8), (54, 9), (54, 10), (54, 11), (54, 12), (54, 13),
    (55, 8), (55, 9), (55, 10), (55, 11), (55, 12), (55, 13),
    (56, 8), (56, 9), (56, 10), (56, 11), (56, 12), (56, 13),
    (57, 8), (57, 9), (57, 10), (57, 11), (57, 12), (57, 13),
    (58, 8), (58, 9), (58, 10), (58, 11), (58, 12), (58, 13),
    (59, 8), (59, 9), (59, 10), (59, 11), (59, 12), (59, 13),
    (60, 8), (60, 9), (60, 10), (60, 11), (60, 12), (60, 13),
    (61, 8), (61, 9), (61, 10), (61, 11), (61, 12), (61, 13),
    (62, 8), (62, 9), (62, 10), (62, 11), (62, 12), (62, 13),
    (63, 8), (63, 9), (63, 10), (63, 11), (63, 12), (63, 13),
    (64, 8), (64, 9), (64, 10), (64, 11), (64, 12), (64, 13),
    (65, 8), (65, 9), (65, 10), (65, 11), (65, 12), (65, 13),
    (66, 8), (66, 9), (66, 10), (66, 11), (66, 12), 
    (67, 8), (67, 9), (67, 10), (67, 11),
    (68, 8), (68, 9), (68, 10)
]

Sen14_L_area_coords = [
    (54, 1), (54, 2), (54, 3), (54, 4), (54, 5), (54, 6),
    (55, 1), (55, 2), (55, 3), (55, 4), (55, 5), (55, 6),
    (56, 1), (56, 2), (56, 3), (56, 4), (56, 5), (56, 6),
    (57, 1), (57, 2), (57, 3), (57, 4), (57, 5), (57, 6),
    (58, 1), (58, 2), (58, 3), (58, 4), (58, 5), (58, 6),
    (59, 1), (59, 2), (59, 3), (59, 4), (59, 5), (59, 6),
    (60, 1), (60, 2), (60, 3), (60, 4), (60, 5), (60, 6),
    (61, 1), (61, 2), (61, 3), (61, 4), (61, 5), (61, 6),
    (62, 1), (62, 2), (62, 3), (62, 4), (62, 5), (62, 6),
    (63, 1), (63, 2), (63, 3), (63, 4), (63, 5), (63, 6),
    (64, 1), (64, 2), (64, 3), (64, 4), (64, 5), (64, 6),
    (65, 1), (65, 2), (65, 3), (65, 4), (65, 5), (65, 6),        
             (66, 2), (66, 3), (66, 4), (66, 5), (66, 6),
                      (67, 3), (67, 4), (67, 5), (67, 6),
                               (68, 4), (68, 5), (68, 6)
]

#----------------------------------------------------------------------------------------------#
Sen1_R_area_coords = [
                                           (0, x+24), (0, x+25), 
                              (1, x+23), (1, x+24), (1, x+25),
                 (2, x+22), (2, x+23), (2, x+24), (2, x+25),
                 (3, x+22), (3, x+23), (3, x+24), (3, x+25),
    (4, x+21), (4, x+22), (4, x+23), (4, x+24), (4, x+25),
    (5, x+21), (5, x+22), (5, x+23), (5, x+24), (5, x+25),
    (6, x+21), (6, x+22), (6, x+23), (6, x+24), (6, x+25),
    (7, x+21), (7, x+22), (7, x+23), (7, x+24), (7, x+25),
    (8, x+21), (8, x+22), (8, x+23), (8, x+24), (8, x+25),
    (9, x+21), (9, x+22), (9, x+23), (9, x+24), (9, x+25),
    (10, x+21), (10, x+22), (10, x+23), (10, x+24), (10, x+25)
]

Sen2_R_area_coords = [
    (0, x+27), (0, x+28), (0, x+29), (0, x+30),
    (1, x+27), (1, x+28), (1, x+29), (1, x+30),
    (2, x+27), (2, x+28), (2, x+29), (2, x+30),
    (3, x+27), (3, x+28), (3, x+29), (3, x+30),
    (4, x+27), (4, x+28), (4, x+29), (4, x+30),
    (5, x+27), (5, x+28), (5, x+29), (5, x+30),
    (6, x+27), (6, x+28), (6, x+29), (6, x+30),
    (7, x+27), (7, x+28), (7, x+29), (7, x+30),
    (8, x+27), (8, x+28), (8, x+29), (8, x+30),
    (9, x+27), (9, x+28), (9, x+29), (9, x+30),
    (10, x+27), (10, x+28), (10, x+29), (10, x+30)
]

Sen3_R_area_coords = [
    (1, x+32), (1, x+33),
    (2, x+32), (2, x+33), (2, x+34),
    (3, x+32), (3, x+33), (3, x+34), (3, x+35),
    (4, x+32), (4, x+33), (4, x+34), (4, x+35),
    (5, x+32), (5, x+33), (5, x+34), (5, x+35), (5, x+36),
    (6, x+32), (6, x+33), (6, x+34), (6, x+35), (6, x+36),
    (7, x+32), (7, x+33), (7, x+34), (7, x+35), (7, x+36), (7, x+37),
    (8, x+32), (8, x+33), (8, x+34), (8, x+35), (8, x+36), (8, x+37),
    (9, x+32), (9, x+33), (9, x+34), (9, x+35), (9, x+36), (9, x+37), (9, x+38),
    (10, x+32), (10, x+33), (10, x+34), (10, x+35), (10, x+36), (10, x+37), (10, x+38)
]

Sen4_R_area_coords = [
    (12, x+21), (12, x+22), (12, x+23), (12, x+24), (12, x+25),
    (13, x+21), (13, x+22), (13, x+23), (13, x+24), (13, x+25),
    (14, x+21), (14, x+22), (14, x+23), (14, x+24), (14, x+25),
    (15, x+21), (15, x+22), (15, x+23), (15, x+24), (15, x+25),
    (16, x+21), (16, x+22), (16, x+23), (16, x+24), (16, x+25),
    (17, x+21), (17, x+22), (17, x+23), (17, x+24), (17, x+25),
                  (18, x+22), (18, x+23), (18, x+24), (18, x+25),
                  (19, x+22), (19, x+23), (19, x+24), (19, x+25),
                  (20, x+22), (20, x+23), (20, x+24), (20, x+25),
                  (21, x+22), (21, x+23), (21, x+24), (21, x+25),
                                (22, x+23), (22, x+24), (22, x+25),
                                (23, x+23), (23, x+24), (23, x+25)
]

Sen5_R_area_coords = [
    (12, x+27), (12, x+28), (12, x+29), (12, x+30),
    (13, x+27), (13, x+28), (13, x+29), (13, x+30),
    (14, x+27), (14, x+28), (14, x+29), (14, x+30),
    (15, x+27), (15, x+28), (15, x+29), (15, x+30),
    (16, x+27), (16, x+28), (16, x+29), (16, x+30),
    (17, x+27), (17, x+28), (17, x+29), (17, x+30),
    (18, x+27), (18, x+28), (18, x+29), (18, x+30),
    (19, x+27), (19, x+28), (19, x+29), (19, x+30),
    (20, x+27), (20, x+28), (20, x+29), (20, x+30),
    (21, x+27), (21, x+28), (21, x+29), (21, x+30),
    (22, x+27), (22, x+28), (22, x+29), (22, x+30),
    (23, x+27), (23, x+28), (23, x+29), (23, x+30)
]

Sen6_R_area_coords = [
    (12, x+32), (12, x+33), (12, x+34), (12, x+35),
    (13, x+32), (13, x+33), (13, x+34), (13, x+35),
    (14, x+32), (14, x+33), (14, x+34), (14, x+35),
    (15, x+32), (15, x+33), (15, x+34), (15, x+35),
    (16, x+32), (16, x+33), (16, x+34), (16, x+35),
    (17, x+32), (17, x+33), (17, x+34), (17, x+35),
    (18, x+32), (18, x+33), (18, x+34), (18, x+35),
    (19, x+32), (19, x+33), (19, x+34), (19, x+35),
    (20, x+32), (20, x+33), (20, x+34), (20, x+35),
    (21, x+32), (21, x+33), (21, x+34), (21, x+35),
    (22, x+32), (22, x+33), (22, x+34), (22, x+35),
    (23, x+32), (23, x+33), (23, x+34), (23, x+35)
]


Sen7_R_area_coords = [
    (12, x+37), (12, x+38), (12, x+39), 
    (13, x+37), (13, x+38), (13, x+39), 
    (14, x+37), (14, x+38), (14, x+39), (14, x+40),
    (15, x+37), (15, x+38), (15, x+39), (15, x+40),
    (16, x+37), (16, x+38), (16, x+39), (16, x+40),
    (17, x+37), (17, x+38), (17, x+39), (17, x+40), (17, x+41),
    (18, x+37), (18, x+38), (18, x+39), (18, x+40), (18, x+41),
    (19, x+37), (19, x+38), (19, x+39), (19, x+40), (19, x+41),
    (20, x+37), (20, x+38), (20, x+39), (20, x+40), (20, x+41),
    (21, x+37), (21, x+38), (21, x+39), (21, x+40), (21, x+41),
    (22, x+37), (22, x+38), (22, x+39), (22, x+40), (22, x+41),
    (23, x+37), (23, x+38), (23, x+39), (23, x+40), (23, x+41)
]

Sen8_R_area_coords = [
    (25, x+24), (25, x+25), (25, x+26), (25, x+27), (25, x+28), (25, x+29), (25, x+30),
                (26, x+25), (26, x+26), (26, x+27), (26, x+28), (26, x+29), (26, x+30),
                (27, x+25), (27, x+26), (27, x+27), (27, x+28), (27, x+29), (27, x+30),
                            (28, x+26), (28, x+27), (28, x+28), (28, x+29), (28, x+30),
                            (29, x+26), (29, x+27), (29, x+28), (29, x+29), (29, x+30),
                                        (30, x+27), (30, x+28), (30, x+29), (30, x+30),
                                        (31, x+27), (31, x+28), (31, x+29), (31, x+30),
                                        (32, x+27), (32, x+28), (32, x+29), (32, x+30),
                                        (33, x+27), (33, x+28), (33, x+29), (33, x+30),
                                                    (34, x+28), (34, x+29), (34, x+30),
                                                    (35, x+28), (35, x+29), (35, x+30),
                                                    (36, x+28), (36, x+29), (36, x+30),
                                                    (37, x+28), (37, x+29), (37, x+30)                          
]

Sen9_R_area_coords = [
    (25, x+32), (25, x+33), (25, x+34), (25, x+35),
    (26, x+32), (26, x+33), (26, x+34), (26, x+35),
    (27, x+32), (27, x+33), (27, x+34), (27, x+35),
    (28, x+32), (28, x+33), (28, x+34), (28, x+35),
    (29, x+32), (29, x+33), (29, x+34), (29, x+35),
    (30, x+32), (30, x+33), (30, x+34), (30, x+35),
    (31, x+32), (31, x+33), (31, x+34), (31, x+35),
    (32, x+32), (32, x+33), (32, x+34), (32, x+35),
    (33, x+32), (33, x+33), (33, x+34), (33, x+35),
    (34, x+32), (34, x+33), (34, x+34), (34, x+35),
    (35, x+32), (35, x+33), (35, x+34), (35, x+35),
    (36, x+32), (36, x+33), (36, x+34), (36, x+35),
    (37, x+32), (37, x+33), (37, x+34), (37, x+35)
]

Sen10_R_area_coords = [
    (25, x+37), (25, x+38), (25, x+39), (25, x+40), (25, x+41),
    (26, x+37), (26, x+38), (26, x+39), (26, x+40), (26, x+41),
    (27, x+37), (27, x+38), (27, x+39), (27, x+40), (27, x+41),
    (28, x+37), (28, x+38), (28, x+39), (28, x+40), (28, x+41),
    (29, x+37), (29, x+38), (29, x+39), (29, x+40), (29, x+41),
    (30, x+37), (30, x+38), (30, x+39), (30, x+40),
    (31, x+37), (31, x+38), (31, x+39), (31, x+40),
    (32, x+37), (32, x+38), (32, x+39), (32, x+40),
    (33, x+37), (33, x+38), (33, x+39), (33, x+40),
    (34, x+37), (34, x+38), (34, x+39), (34, x+40),
    (35, x+37), (35, x+38), (35, x+39), (35, x+40),
    (36, x+37), (36, x+38), (36, x+39), (36, x+40),
    (37, x+37), (37, x+38), (37, x+39), (37, x+40),
]

Sen11_R_area_coords = [
    (39, x+28), (39, x+29), (39, x+30), (39, x+31), (39, x+32), (39, x+33),
    (40, x+28), (40, x+29), (40, x+30), (40, x+31), (40, x+32), (40, x+33),
    (41, x+28), (41, x+29), (41, x+30), (41, x+31), (41, x+32), (41, x+33),
    (42, x+28), (42, x+29), (42, x+30), (42, x+31), (42, x+32), (42, x+33),
    (43, x+28), (43, x+29), (43, x+30), (43, x+31), (43, x+32), (43, x+33),
    (44, x+28), (44, x+29), (44, x+30), (44, x+31), (44, x+32), (44, x+33),
    (45, x+28), (45, x+29), (45, x+30), (45, x+31), (45, x+32), (45, x+33),
    (46, x+28), (46, x+29), (46, x+30), (46, x+31), (46, x+32), (46, x+33),
    (47, x+28), (47, x+29), (47, x+30), (47, x+31), (47, x+32), (47, x+33),
    (48, x+28), (48, x+29), (48, x+30), (48, x+31), (48, x+32), (48, x+33),
    (49, x+28), (49, x+29), (49, x+30), (49, x+31), (49, x+32), (49, x+33),
    (50, x+28), (50, x+29), (50, x+30), (50, x+31), (50, x+32), (50, x+33),
    (51, x+28), (51, x+29), (51, x+30), (51, x+31), (51, x+32), (51, x+33),
    (52, x+28), (52, x+29), (52, x+30), (52, x+31), (52, x+32), (52, x+33)
]

Sen12_R_area_coords = [
    (39, x+35), (39, x+36), (39, x+37), (39, x+38), (39, x+39), (39, x+40),
    (40, x+35), (40, x+36), (40, x+37), (40, x+38), (40, x+39), (40, x+40),
    (41, x+35), (41, x+36), (41, x+37), (41, x+38), (41, x+39), (41, x+40),
    (42, x+35), (42, x+36), (42, x+37), (42, x+38), (42, x+39), (42, x+40),
    (43, x+35), (43, x+36), (43, x+37), (43, x+38), (43, x+39), (43, x+40),
    (44, x+35), (44, x+36), (44, x+37), (44, x+38), (44, x+39), (44, x+40),
    (45, x+35), (45, x+36), (45, x+37), (45, x+38), (45, x+39), (45, x+40),
    (46, x+35), (46, x+36), (46, x+37), (46, x+38), (46, x+39), (46, x+40),
    (47, x+35), (47, x+36), (47, x+37), (47, x+38), (47, x+39), (47, x+40),
    (48, x+35), (48, x+36), (48, x+37), (48, x+38), (48, x+39), (48, x+40),
    (49, x+35), (49, x+36), (49, x+37), (49, x+38), (49, x+39), (49, x+40),
    (50, x+35), (50, x+36), (50, x+37), (50, x+38), (50, x+39), (50, x+40),
    (51, x+35), (51, x+36), (51, x+37), (51, x+38), (51, x+39), (51, x+40),
    (52, x+35), (52, x+36), (52, x+37), (52, x+38), (52, x+39), (52, x+40)
]

Sen13_R_area_coords = [
    (54, x+28), (54, x+29), (54, x+30), (54, x+31), (54, x+32), (54, x+33),
    (55, x+28), (55, x+29), (55, x+30), (55, x+31), (55, x+32), (55, x+33),
    (56, x+28), (56, x+29), (56, x+30), (56, x+31), (56, x+32), (56, x+33),
    (57, x+28), (57, x+29), (57, x+30), (57, x+31), (57, x+32), (57, x+33),
    (58, x+28), (58, x+29), (58, x+30), (58, x+31), (58, x+32), (58, x+33),
    (59, x+28), (59, x+29), (59, x+30), (59, x+31), (59, x+32), (59, x+33),
    (60, x+28), (60, x+29), (60, x+30), (60, x+31), (60, x+32), (60, x+33),
    (61, x+28), (61, x+29), (61, x+30), (61, x+31), (61, x+32), (61, x+33),
    (62, x+28), (62, x+29), (62, x+30), (62, x+31), (62, x+32), (62, x+33),
    (63, x+28), (63, x+29), (63, x+30), (63, x+31), (63, x+32), (63, x+33),
    (64, x+28), (64, x+29), (64, x+30), (64, x+31), (64, x+32), (64, x+33),
    (65, x+28), (65, x+29), (65, x+30), (65, x+31), (65, x+32), (65, x+33),
                (66, x+29), (66, x+30), (66, x+31), (66, x+32), (66, x+33),
                            (67, x+30), (67, x+31), (67, x+32), (67, x+33),
                                        (68, x+31), (68, x+32), (68, x+33)
]

Sen14_R_area_coords = [
    (54, x+35), (54, x+36), (54, x+37), (54, x+38), (54, x+39), (54, x+40),
    (55, x+35), (55, x+36), (55, x+37), (55, x+38), (55, x+39), (55, x+40),
    (56, x+35), (56, x+36), (56, x+37), (56, x+38), (56, x+39), (56, x+40),
    (57, x+35), (57, x+36), (57, x+37), (57, x+38), (57, x+39), (57, x+40),
    (58, x+35), (58, x+36), (58, x+37), (58, x+38), (58, x+39), (58, x+40),
    (59, x+35), (59, x+36), (59, x+37), (59, x+38), (59, x+39), (59, x+40),
    (60, x+35), (60, x+36), (60, x+37), (60, x+38), (60, x+39), (60, x+40),
    (61, x+35), (61, x+36), (61, x+37), (61, x+38), (61, x+39), (61, x+40),
    (62, x+35), (62, x+36), (62, x+37), (62, x+38), (62, x+39), (62, x+40),
    (63, x+35), (63, x+36), (63, x+37), (63, x+38), (63, x+39), (63, x+40),
    (64, x+35), (64, x+36), (64, x+37), (64, x+38), (64, x+39), (64, x+40),
    (65, x+35), (65, x+36), (65, x+37), (65, x+38), (65, x+39), (65, x+40),
    (66, x+35), (66, x+36), (66, x+37), (66, x+38), (66, x+39), 
    (67, x+35), (67, x+36), (67, x+37), (67, x+38), 
    (68, x+35), (68, x+36), (68, x+37) 
]





# 원본 CSV를 Heel strike 기준으로 자르는 코드
def csv_cut_HeelStrike(csv_path = "./data/raw", save_path = "./data/spride"):
    ''' csv_path = 원본 CSV 주소, 
        save_path = 저장 디렉토리
        return True
        
        원본 CSV파일을 오른발 힐 스트라이크 기준으로 스프라이드 단위로 자른 csv를 {:02d} 형식으로 
        저장 디렉토리에 저장하는 함수'''
    
    os.makedirs(save_path, exist_ok=True)

    index = 0
    flag = False
    heel_strike = 0

    try:
        df = pd.read_csv(csv_path)
        num_rows = df.shape[0]                  # (행 개수, 열 개수) 튜플에서 첫 번째 값 가져오기
        # print("행 개수:", num_rows)             # 2 ~ n - 1 => n - 2

        for row in range(num_rows):
            heel_value = df.loc[row, ["Sen13_R", "Sen14_R"]].sum()      # 0 => n으로 증가시 

            if flag == False and heel_value > 0:
                flag = True
                index += 1

                df_split = df.loc[heel_strike - 1 : row - 1]
                # data_save_path = save_path + "CSV_{:02d}".format(index) + ".csv"
                data_save_path = os.path.join(save_path, "CSV_{:02d}.csv".format(index))
                df_split.to_csv(data_save_path)
                # print("{:02d} 저장 완료!".format(index))
                heel_strike = row
    
            if flag == True and heel_value == 0:
                flag = False

    except Exception as e:
        print(f"Error: {e}")
    return True


# raw csv 시각화
def csv_to_plot_raw(data_root = "./data/spride", save_root = "./data/spride_img"):
    ''' data_root = 원본 CSV 주소, 
        save_root = 저장 디렉토리
        return True
    
        원본 CSV파일을 
        합의 평균값으로 출력한 그래프
        
        data_path로 지정된 CSV 파일을 찾아서 모두 다 plot으로 저장한다.
        저장은 CSV이름으로 png 형태로 저장된다.'''

    os.makedirs(save_root, exist_ok=True)
    
    try:
        df = pd.read_csv(data_root)

        SenL_list = ["Sen{}_L".format(i) for i in range(1, 15)]
        SenR_list = ["Sen{}_R".format(i) for i in range(1, 15)]
        CLK = "CLK"

        df["SenL_Mean"] = df[SenL_list].mean(axis = 1)
        df["SenR_Mean"] = df[SenR_list].mean(axis = 1)  

        plt.figure(figsize=(12, 6))
        plt.plot(df[CLK], df["SenL_Mean"], label = str(SenL_list),  linestyle = 'solid')
        plt.plot(df[CLK], df["SenR_Mean"], label = str(SenR_list),  linestyle = 'dashed')
        plt.xlabel("CLK")
        plt.ylabel("Sensor Value")
        plt.title("Gait Mean")

        plt.grid()
        save_png = save_root + "/raw.png"
        plt.savefig(save_png , dpi=300, bbox_inches='tight')
        plt.close()

    except:
        print("CSV to PLOT Cplt")
    
    return True



# spride csv 시각화
def csv_to_plot_spride(data_root = "./data/spride", save_root = "./data/spride_img"):
    ''' data_root = 원본 CSV 주소, 
        save_root = 저장 디렉토리
        return True
    
        스프라이드 단위로 잘린 CSV파일을 
        합의 평균값으로 출력한 그래프
        
        해당 디렉토리에 있는 CSV 파일을 찾아서 모두 다 plot으로 저장한다.
        저장은 CSV이름으로 png 형태로 저장된다.'''
    
    os.makedirs(save_root, exist_ok=True)

    try:
        df = pd.read_csv(data_root)

        SenL_list = ["Sen{}_L".format(i) for i in range(1, 15)]
        SenR_list = ["Sen{}_R".format(i) for i in range(1, 15)]
        CLK = "CLK"

        df["SenL_Mean"] = df[SenL_list].mean(axis = 1)
        df["SenR_Mean"] = df[SenR_list].mean(axis = 1)  

        plt.figure(figsize=(12, 6))
        plt.plot(df[CLK], df["SenL_Mean"], label = str(SenL_list),  linestyle = 'solid')
        plt.plot(df[CLK], df["SenR_Mean"], label = str(SenR_list),  linestyle = 'dashed')
        plt.xlabel("CLK")
        plt.ylabel("Sensor Value")
        plt.title("Gait Mean")

        plt.grid()
        save_png = save_root + "/spride.png"
        plt.savefig(save_png , dpi=300, bbox_inches='tight')
        plt.close()

    except:
        print("CSV to PLOT Cplt")
    
    return True


# 히트맵 출력
def heatmap(data_root = "./data/spride", save_root = "./data/heatmap"):
    ''' data_root = spride된 CSV 파일 경로
        save_root = 20장의 jet cmap 히트맵 출력 경로로
        return True
        '''
    
    os.makedirs(save_root, exist_ok=True)

    target_area_coords = [
        Sen3_L_area_coords, Sen2_L_area_coords, Sen1_L_area_coords,
        Sen7_L_area_coords, Sen6_L_area_coords, Sen5_L_area_coords, Sen4_L_area_coords,
        Sen10_L_area_coords, Sen9_L_area_coords, Sen8_L_area_coords,
        Sen12_L_area_coords, Sen11_L_area_coords, 
        Sen14_L_area_coords, Sen13_L_area_coords, 

        Sen1_R_area_coords, Sen2_R_area_coords, Sen3_R_area_coords,
        Sen4_R_area_coords, Sen5_R_area_coords, Sen6_R_area_coords, Sen7_R_area_coords,
        Sen8_R_area_coords, Sen9_R_area_coords, Sen10_R_area_coords,
        Sen11_R_area_coords, Sen12_R_area_coords,
        Sen13_R_area_coords, Sen14_R_area_coords
    ]


    os.makedirs(save_root, exist_ok = True)  # 저장 폴더 생성

    df = pd.read_csv(data_root)

    # 20구간(bin)으로 나누기
    num_bins = 20
    df_split = np.array_split(df, num_bins)


    SenL_list = [f"Sen{i}_L" for i in range(1, 15)]
    SenR_list = [f"Sen{i}_R" for i in range(1, 15)]

    global_max = 0
    
    for i in range(num_bins):
        L = df_split[i][SenL_list].iloc[0].values.astype(float)
        R = df_split[i][SenR_list].iloc[0].values.astype(float)
        all_vals = np.concatenate([L.flatten(), R.flatten()])
        global_max = max(global_max, np.max(all_vals))

    for i in range(num_bins):
        SenL_values = df_split[i][SenL_list].iloc[0].values.astype(float)  # float
        SenR_values = df_split[i][SenR_list].iloc[0].values.astype(float)
        SEN_values = np.concatenate([SenL_values.flatten(), SenR_values.flatten()]) 

        if global_max != 0:                                          # 0으로 나누는 것 방지
            SEN_values_normalized = SEN_values / global_max if global_max > 0 else SEN_values
        else:
            SEN_values_normalized = SEN_values


        all_coords = [pt for sensor in target_area_coords for pt in (sensor if isinstance(sensor, list) else [sensor])]
        max_x = max([x for x, y in all_coords])
        max_y = max([y for x, y in all_coords])

        mapped_data = np.full((max_y + 1, max_x + 1), np.nan)

        for coords, value in zip(target_area_coords, SEN_values_normalized):
            if isinstance(coords, list):
                for x, y in coords:
                    mapped_data[y, x] = value
        # coords가 단일 좌표 튜플인 경우
            else:
                x, y = coords
                mapped_data[y, x] = value

        plt.figure(figsize=(12, 6))
        plt.imshow(mapped_data.T, cmap = "jet", aspect = "auto")
        plt.axis("off") 
       
        save_path = os.path.join(save_root, f"Heatmap_{i:02d}.png")
        plt.savefig(save_path, bbox_inches = "tight", pad_inches = 0)
        plt.close() 

        print(f"Heatmap saved: {save_path}")

    return True






